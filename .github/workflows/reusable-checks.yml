name: 'Checks'

on:
  workflow_call:
    secrets:
      appId:
        description: 'GitHub Application ID'
        required: true

      appPrivateKey:
        description: 'GitHub Application private key'
        required: true

      githubToken:
        description: 'GitHub Token value'
        required: true

jobs:
  detect:
    runs-on: ubuntu-latest
    name: 'Detect changed modules'
    outputs:
      directories: ${{ steps.condense.outputs.result }}
    steps:
      - name: Get changed files
        uses: Ana06/get-changed-files@v2.2.0
        id: raw-files
        with:
          format: 'json'

      - name: Condense to directory list
        uses: actions/github-script@v6
        id: condense
        env:
          RAW_FILES: '${{ steps.raw-files.outputs.all }}'
        with:
          script: |
            const raw = JSON.parse(process.env.RAW_FILES);
            const directories = Array.from(new Set(raw
              .filter(x => !x.startsWith('.'))
              .filter(x => x.includes('/'))
              .map(x => x.split('/')[0])
            ));
            if (directories.length < 1) return {};
            return {
              include: directories.map(directory => ({ directory })),
            };

  validate:
    needs:
      - detect
    if: ${{ needs.detect.outputs.directories != '{}' }}
    strategy:
      matrix: "${{ fromJson(needs.detect.outputs.directories) }}"
      fail-fast: false
    uses: ./.github/workflows/reusable-validate.yml
    with:
      terraformVersion: '1.3.4'
      moduleRootDirectory: ${{ matrix.directory }}
    secrets:
      appId: ${{ secrets.appId }}
      appPrivateKey: ${{ secrets.appPrivateKey }}

  lint:
    needs:
      - detect
    if: ${{ needs.detect.outputs.directories != '{}' }}
    strategy:
      matrix: "${{ fromJson(needs.detect.outputs.directories) }}"
      fail-fast: false
    uses: ./.github/workflows/reusable-lint.yml
    with:
      moduleRootDirectory: ${{ matrix.directory }}
      tflintVersion: 'v0.45.0'
    secrets:
      githubToken: ${{ secrets.githubToken }}

  analysis:
    needs:
      - detect
    if: ${{ needs.detect.outputs.directories != '{}' }}
    strategy:
      matrix: "${{ fromJson(needs.detect.outputs.directories) }}"
      fail-fast: false
    uses: ./.github/workflows/reusable-analysis.yml
    with:
      moduleRootDirectory: ${{ matrix.directory }}
    secrets:
      githubToken: ${{ secrets.githubToken }}
